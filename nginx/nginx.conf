events {
    worker_connections 1024;
}

http {
    upstream container-auth {
        server auth-service:8080;
    }

    upstream container-frontend {
        server frontend:8080;
    }

    server {
        listen 80;

        location / {
            auth_request /auth-check;
            error_page 401 = @unauthorized;

            proxy_pass http://container-frontend/;
        }

        location = /auth-check {
            internal;
            proxy_pass http://container-auth/auth;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Authorization $http_authorization;
        }

        location @unauthorized {
            return 401;
        }
    }
}